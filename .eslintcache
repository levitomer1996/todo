[{"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\index.js":"1","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\reportWebVitals.js":"2","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\App.js":"3","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Context\\AuthContext.js":"4","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\Main.js":"5","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Context\\IndexPageContex.js":"6","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SigninPage\\SignInPage.js":"7","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SigninPage\\useSignin.js":"8","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SignupPage\\SignupPage.js":"9","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\MainMenu\\MyNotes.js":"10","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\IndexPage.js":"11","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SignupPage\\useSignup.js":"12","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\api\\todo.js":"13","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\MainMenu\\Comps\\Note.js":"14","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\Note.js":"15","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\AddNoteBoard.js":"16","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\useGetUserNotes.js":"17","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Components\\Boostrapinput\\BootstrapInput.js":"18","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\usePostNewNote.js":"19","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\ColorPickerModal.js":"20","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\useDeletePost.js":"21","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\ColorPicker.js":"22","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\MainMenu\\Comps\\AccountIcon.js":"23","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\StatusSelect.js":"24","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\useUpdateNote.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":263,"mtime":1609257394019,"results":"29","hashOfConfig":"27"},{"size":1235,"mtime":1609257262459,"results":"30","hashOfConfig":"27"},{"size":1636,"mtime":1609257855186,"results":"31","hashOfConfig":"27"},{"size":1380,"mtime":1609257262459,"results":"32","hashOfConfig":"27"},{"size":1646,"mtime":1609257262473,"results":"33","hashOfConfig":"27"},{"size":1288,"mtime":1609257262475,"results":"34","hashOfConfig":"27"},{"size":3317,"mtime":1609257262477,"results":"35","hashOfConfig":"27"},{"size":812,"mtime":1609257262473,"results":"36","hashOfConfig":"27"},{"size":2070,"mtime":1609257931674,"results":"37","hashOfConfig":"27"},{"size":654,"mtime":1609257262477,"results":"38","hashOfConfig":"27"},{"size":180,"mtime":1609257262479,"results":"39","hashOfConfig":"27"},{"size":1236,"mtime":1609257262472,"results":"40","hashOfConfig":"27"},{"size":2492,"mtime":1609257262468,"results":"41","hashOfConfig":"27"},{"size":2657,"mtime":1609257262465,"results":"42","hashOfConfig":"27"},{"size":579,"mtime":1609257262462,"results":"43","hashOfConfig":"27"},{"size":1796,"mtime":1609257262457,"results":"44","hashOfConfig":"27"},{"size":642,"mtime":1609257262463,"results":"45","hashOfConfig":"27"},{"size":2119,"mtime":1609257262467,"results":"46","hashOfConfig":"27"},{"size":697,"mtime":1609257262462,"results":"47","hashOfConfig":"27"},{"size":663,"mtime":1609257262466,"results":"48","hashOfConfig":"27"},{"size":1223,"mtime":1609257262471,"results":"49","hashOfConfig":"27"},{"size":1834,"mtime":1609257262468,"results":"50","hashOfConfig":"27"},{"size":603,"mtime":1609257262464,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1b21y9z",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"54"},"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\index.js",[],["120","121"],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\reportWebVitals.js",[],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\App.js",["122"],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Context\\AuthContext.js",["123"],"import React, { useReducer, useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext();\r\nconst AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"signin\":\r\n      return { ...state, isLogged: true, user: action.payload };\r\n    case \"signout\":\r\n      localStorage.removeItem(\"ut\");\r\n      return { ...state, isLogged: false, user: {} };\r\n    case \"set_theme_color\":\r\n      return { ...state, themeColor: action.payload };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authState, dispatch] = useReducer(AuthReducer, {\r\n    isLogged: false,\r\n    user: {},\r\n    themeColor: { mainMenu: \"#ff000008\", header: \"rgba(255, 0, 0, 0.3)\" },\r\n  });\r\n\r\n  const signinContex = (data) => {\r\n    dispatch({ type: \"signin\", payload: data });\r\n    return;\r\n  };\r\n  const signoutContex = (data) => {\r\n    dispatch({ type: \"signout\" });\r\n  };\r\n  const setThemeColor = (data) => {\r\n    dispatch({\r\n      type: \"set_theme_color\",\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ authState, signinContex, signoutContex, setThemeColor }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthContext;\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\Main.js",["124","125","126","127","128","129"],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Context\\IndexPageContex.js",["130"],"import React, { useReducer, useState } from \"react\";\r\n\r\nconst IndexPageContext = React.createContext();\r\nconst IndexPageReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"open_colorpicker_modal\":\r\n      return { ...state, isColorPickerModalOpen: true };\r\n    case \"close_colorpicker_modal\":\r\n      return { ...state, isColorPickerModalOpen: false };\r\n    case \"set_color_picker_color\":\r\n      return { ...state, colorPicker: action.payload };\r\n    case \"add_notes_list\":\r\n      return { ...state, notes: action.payload };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const IndexPageProvider = ({ children }) => {\r\n  const [indexPageState, dispatch] = useReducer(IndexPageReducer, {\r\n    isColorPickerModalOpen: false,\r\n    colorPicker: \"#3f51b5\",\r\n    notes: [],\r\n  });\r\n\r\n  const openColorPicker = () => {\r\n    dispatch({ type: \"open_colorpicker_modal\" });\r\n  };\r\n\r\n  const setColorPickerColor = (data) => {\r\n    dispatch({ type: \"set_color_picker_color\", payload: data });\r\n  };\r\n  const addNotesList = (data) => {\r\n    dispatch({ type: \"add_notes_list\", payload: data });\r\n  };\r\n\r\n  return (\r\n    <IndexPageContext.Provider\r\n      value={{\r\n        indexPageState,\r\n        openColorPicker,\r\n        setColorPickerColor,\r\n        addNotesList,\r\n      }}\r\n    >\r\n      {children}\r\n    </IndexPageContext.Provider>\r\n  );\r\n};\r\nexport default IndexPageContext;\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SigninPage\\SignInPage.js",["131","132","133","134"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BootstrapInput from \"../../Components/Boostrapinput/BootstrapInput\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useSignin from \"./useSignin\";\r\nconst Signin = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { signin, isSignedInResolver, spinner } = useSignin();\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n\r\n        signin({ email, password });\r\n      }}\r\n      style={{ marginTop: \"10%\" }}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <BootstrapInput\r\n            type={\"email\"}\r\n            label={\"E-mail\"}\r\n            onChangeFunction={setEmail}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          {\" \"}\r\n          <BootstrapInput\r\n            type={\"password\"}\r\n            label=\"Password\"\r\n            onChangeFunction={setPassword}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            type=\"sumbit\"\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: \"#ffb2b2\" }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <a href={\"/register\"}>Still don't have an account? Register now</a>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\nexport default Signin;\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SigninPage\\useSignin.js",["135","136","137","138"],"import React, { useContext, useState } from \"react\";\r\nimport todo from \"../../api/todo\";\r\nimport AuthContext from \"../../Context/AuthContext\";\r\nexport default () => {\r\n  const { signinContex, signoutContex, authState } = useContext(AuthContext);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const isSignedInResolver = async () => {\r\n    if (localStorage.getItem(\"ut\") === null) {\r\n      return;\r\n    } else {\r\n      try {\r\n        const res = await todo.get(\"/auth/getuser\", {\r\n          headers: {\r\n            //IsTokenExist = token.\r\n            Authorization: `Bearer ${localStorage.getItem(\"ut\")}`,\r\n          },\r\n        });\r\n\r\n        signinContex(res.data);\r\n      } catch (error) {\r\n        signoutContex();\r\n        localStorage.removeItem(\"ut\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const signin = async (creds) => {\r\n    try {\r\n      setSpinner(true);\r\n      const res = await todo.post(\"/auth/signin\", creds);\r\n      localStorage.setItem(\"ut\", res.data.accessToken);\r\n      setSpinner(false);\r\n    } catch (error) {\r\n      setSpinner(false);\r\n      setError(true);\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 3000);\r\n    }\r\n    isSignedInResolver();\r\n  };\r\n  return { signin, isSignedInResolver, spinner };\r\n};\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SignupPage\\SignupPage.js",["139","140"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BootstrapInput from \"../../Components/Boostrapinput/BootstrapInput\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useSignup from \"./useSignup\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst useStyles = makeStyles(() => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginLeft: \"1rem\",\r\n    },\r\n    largeScreenName: {\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    error: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n        width: theme.spacing(16),\r\n        height: theme.spacing(16),\r\n      },\r\n    },\r\n  }));\r\n});\r\nexport default function SignupPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [f_name, set_f_name] = useState(\"\");\r\n  const [l_name, set_l_name] = useState(\"\");\r\n\r\n  const [signup, spinner, error, redirect] = useSignup();\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        console.log({ email, password, f_name, l_name });\r\n        signup({ email, password, f_name, l_name });\r\n      }}\r\n    >\r\n      {redirect ? <Redirect to=\"/\" /> : null}\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        className={classes.root}\r\n      >\r\n        <Grid item>\r\n          <BootstrapInput\r\n            type={\"email\"}\r\n            label=\"E-mail\"\r\n            onChangeFunction={setEmail}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <BootstrapInput\r\n            type={\"password\"}\r\n            label=\"Password\"\r\n            onChangeFunction={setPassword}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              {\" \"}\r\n              <BootstrapInput\r\n                type={\"text\"}\r\n                label=\"First name\"\r\n                onChangeFunction={set_f_name}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <BootstrapInput\r\n                type={\"text\"}\r\n                label=\"Last name\"\r\n                onChangeFunction={set_l_name}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button type=\"sumbit\" variant=\"contained\" color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <a href=\"/\">Already have a user? Login now</a>\r\n        </Grid>\r\n        <Grid item>{spinner ? <CircularProgress /> : null}</Grid>\r\n\r\n        <Grid item>\r\n          {error ? (\r\n            <Alert severity=\"error\">Something wen't wrong.</Alert>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\MainMenu\\MyNotes.js",[],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\IndexPage.js",["141","142","143"],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\SignupPage\\useSignup.js",["144","145","146"],"import React, { useState } from \"react\";\r\nimport todo from \"../../api/todo\";\r\nexport default () => {\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const signup = async (creds) => {\r\n    try {\r\n      setSpinner(true);\r\n      const res = await todo.post(\"/auth/signup\", creds);\r\n      setSpinner(false);\r\n      setRedirect(true);\r\n    } catch (error) {\r\n      setSpinner(false);\r\n      setError(\"Something went wrong\");\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n  return [signup, spinner, error, redirect];\r\n};\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\api\\todo.js",["147"],"import axios from \"axios\";\r\nvar localhost = \"http://localhost:4000\";\r\nvar heroku = \"https://jaco-server.herokuapp.com\";\r\nexport default axios.create({\r\n  baseURL: localhost,\r\n});\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\MainMenu\\Comps\\Note.js",["148","149"],"import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\nexport default function Note() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          primary=\"Brunch this weekend?\"\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                {\"Wedensday\"}\r\n              </Typography>\r\n              {\" — I'll be in your neighborhood doing errands this…\"}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\Note.js",["150","151"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport moment from \"moment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport useDeletePost from \"../../../Hooks/useDeletePost\";\r\nimport StatusSelect from \"./StatusSelect\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 20,\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default function Note({\r\n  title,\r\n  content,\r\n  color,\r\n  time_Posted,\r\n  id,\r\n  note_status,\r\n}) {\r\n  const classes = useStyles();\r\n  useEffect(() => {}, []);\r\n  const [deletePost] = useDeletePost();\r\n  return (\r\n    <Grid item>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item className={classes.root}>\r\n          <Paper\r\n            elevation={3}\r\n            style={{\r\n              backgroundColor: color,\r\n              overflowWrap: \"break-word\",\r\n              textOverflow: \"ellipsis\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                padding: \"10px\",\r\n                display: \"block\",\r\n              }}\r\n            >\r\n              <Typography style={{ fontWeight: \"bold\", fontSize: \"larger\" }}>\r\n                {title}\r\n              </Typography>\r\n              <Typography style={{ fontSize: \"smaller\" }}>\r\n                {\" \"}\r\n                {moment(time_Posted, \"YYYYMMDD\").fromNow()}\r\n              </Typography>\r\n            </div>\r\n\r\n            <div style={{ padding: 20 }}>{content}</div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item style={{ padding: 20 }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item>\r\n              {\" \"}\r\n              <IconButton\r\n                style={{ float: \"right\" }}\r\n                onClick={() => deletePost({ id })}\r\n              >\r\n                {\" \"}\r\n                <DeleteIcon fontSize={\"large\"} />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <StatusSelect status={note_status} id={id} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\AddNoteBoard.js",["152","153","154"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IndexPageContext from \"../../../Context/IndexPageContex\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport ColorPickerModal from \"./ColorPickerModal\";\r\nimport usePostNewNote from \"../../../Hooks/usePostNewNote\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"0px solid\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst AddNoteBoard = () => {\r\n  const classes = useStyles();\r\n  const { indexPageState } = useContext(IndexPageContext);\r\n  const [postNewNote] = usePostNewNote();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        postNewNote({ title, content, color: indexPageState.colorPicker });\r\n      }}\r\n    >\r\n      <div className={classes.root}>\r\n        {\" \"}\r\n        <input\r\n          placeholder=\"Note title\"\r\n          className={classes.input}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Write a note here\"\r\n          className={classes.input}\r\n          cols=\"40\"\r\n          rows=\"5\"\r\n          onChange={(e) => {\r\n            setContent(e.target.value);\r\n          }}\r\n        />\r\n        <div style={{ display: \"inline-block\" }}>\r\n          <div style={{ float: \"left\" }}>\r\n            <ColorPickerModal />\r\n          </div>\r\n          <div style={{ float: \"right\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Add Note\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNoteBoard;\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\useGetUserNotes.js",["155","156","157"],"import React, { useContext } from \"react\";\r\nimport todo from \"../api/todo\";\r\nimport IndexPageContext from \"../Context/IndexPageContex\";\r\n\r\nexport default () => {\r\n  const { indexPageState, addNotesList } = useContext(IndexPageContext);\r\n  const getUserNotes = async () => {\r\n    try {\r\n      const res = await todo.get(\"/note/getuserposts\", {\r\n        headers: {\r\n          //IsTokenExist = token.\r\n          Authorization: `Bearer ${localStorage.getItem(\"ut\")}`,\r\n        },\r\n      });\r\n      addNotesList(res.data);\r\n    } catch (error) {}\r\n  };\r\n  return [getUserNotes];\r\n};\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Components\\Boostrapinput\\BootstrapInput.js",["158","159","160"],"import React, { useEffect, useContext } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { withStyles, fade } from \"@material-ui/core/styles\";\r\n\r\nconst Input = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: theme.width ? theme.width : \"auto\",\r\n    padding: \"10px 12px\",\r\n\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function BootStrapRegisterInput({\r\n  type,\r\n  label,\r\n  width,\r\n  textChangeFunction,\r\n  onChangeFunction,\r\n}) {\r\n  return (\r\n    <FormControl>\r\n      <InputLabel\r\n        shrink\r\n        htmlFor=\"bootstrap-input\"\r\n        style={{ textAlign: \"right\" }}\r\n      >\r\n        {label}\r\n      </InputLabel>\r\n      <Input\r\n        type={type}\r\n        style={{ width: width ? width : \"auto\" }}\r\n        onChange={(e) => onChangeFunction(e.target.value)}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\usePostNewNote.js",["161","162","163"],"import React, { useContext, useState } from \"react\";\r\nimport todo from \"../api/todo\";\r\nimport IndexPageContext from \"../Context/IndexPageContex\";\r\n\r\nexport default () => {\r\n  const { indexPageState, addNotesList } = useContext(IndexPageContext);\r\n  const postNewNote = async (newNote) => {\r\n    try {\r\n      const res = await todo.post(\"/note/newnote\", newNote, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"ut\")}`,\r\n        },\r\n      });\r\n      let newArray = indexPageState.notes;\r\n      newArray.push(res.data);\r\n      addNotesList(newArray);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return [postNewNote];\r\n};\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\ColorPickerModal.js",[],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\useDeletePost.js",["164","165","166"],"import React, { useContext } from \"react\";\r\nimport todo from \"../api/todo\";\r\nimport IndexPageContext from \"../Context/IndexPageContex\";\r\nexport default () => {\r\n  const { addNotesList, indexPageState } = useContext(IndexPageContext);\r\n  var array_to_delete = indexPageState.notes;\r\n\r\n  const deletePost = async (id) => {\r\n    try {\r\n      const res = await todo.post(\"/note/delete\", id, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"ut\")}`,\r\n        },\r\n      });\r\n\r\n      const newArray = indexPageState.notes.filter(\r\n        (item) => item._id !== res.data.id\r\n      );\r\n      addNotesList(newArray);\r\n    } catch (error) {}\r\n  };\r\n  return [deletePost];\r\n};\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\ColorPicker.js",["167"],"import { Modal } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport IndexPageContex from \"../../../Context/IndexPageContex\";\r\nclass ColorPicker extends React.Component {\r\n  state = {\r\n    background: \"#3f51b5f7\",\r\n  };\r\n\r\n  handleChangeComplete = (color) => {\r\n    this.setState({ background: color.hex });\r\n    this.context.setColorPickerColor(color.hex);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SketchPicker\r\n        color={this.state.background}\r\n        onChangeComplete={this.handleChangeComplete}\r\n      />\r\n    );\r\n  }\r\n}\r\nColorPicker.contextType = IndexPageContex;\r\nexport default ColorPicker;\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\MainMenu\\Comps\\AccountIcon.js",[],"C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Pages\\IndexPage\\Comps\\StatusSelect.js",["168"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport useUpdateNote from \"../../../Hooks/useUpdateNote\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function StatusSelect({ status, id }) {\r\n  const classes = useStyles();\r\n  const [stateStatus, setStatus] = useState(status);\r\n  const [updateNoteStatus] = useUpdateNote();\r\n  const handleChange = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-label\">{stateStatus}</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={stateStatus}\r\n        onChange={handleChange}\r\n      >\r\n        <MenuItem\r\n          value={\"OPEN\"}\r\n          onClick={() => {\r\n            updateNoteStatus(id, \"OPEN\");\r\n          }}\r\n        >\r\n          Open\r\n        </MenuItem>\r\n        <MenuItem\r\n          value={\"IN_PROGRESS\"}\r\n          onClick={() => {\r\n            updateNoteStatus(id, \"IN_PROGRESS\");\r\n          }}\r\n        >\r\n          In progress\r\n        </MenuItem>\r\n        <MenuItem\r\n          value={\"DONE\"}\r\n          onClick={() => {\r\n            updateNoteStatus(id, \"DONE\");\r\n          }}\r\n        >\r\n          Done\r\n        </MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\Users\\levit\\Desktop\\Work\\Todo\\todo\\src\\Hooks\\useUpdateNote.js",["169","170","171","172"],"import React, { useContext } from \"react\";\r\nimport IndexPageContex from \"../Context/IndexPageContex\";\r\nimport todo from \"../api/todo\";\r\n\r\nexport default () => {\r\n  const { indexPageState } = useContext(IndexPageContex);\r\n\r\n  const updateNoteStatus = async (id, status) => {\r\n    try {\r\n      const res = await todo.patch(\r\n        \"/note\",\r\n        { id, status },\r\n        {\r\n          headers: {\r\n            //IsTokenExist = token.\r\n            Authorization: `Bearer ${localStorage.getItem(\"ut\")}`,\r\n          },\r\n        }\r\n      );\r\n    } catch (error) {}\r\n  };\r\n  return [updateNoteStatus];\r\n};\r\n",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":12},{"ruleId":"177","severity":1,"message":"181","line":1,"column":29,"nodeType":"179","messageId":"180","endLine":1,"endColumn":37},{"ruleId":"177","severity":1,"message":"182","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":26},{"ruleId":"177","severity":1,"message":"183","line":3,"column":35,"nodeType":"179","messageId":"180","endLine":3,"endColumn":41},{"ruleId":"177","severity":1,"message":"184","line":3,"column":50,"nodeType":"179","messageId":"180","endLine":3,"endColumn":54},{"ruleId":"177","severity":1,"message":"185","line":4,"column":23,"nodeType":"179","messageId":"180","endLine":4,"endColumn":35},{"ruleId":"177","severity":1,"message":"186","line":14,"column":11,"nodeType":"179","messageId":"180","endLine":14,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":18,"column":6,"nodeType":"189","endLine":18,"endColumn":8,"suggestions":"190"},{"ruleId":"177","severity":1,"message":"181","line":1,"column":29,"nodeType":"179","messageId":"180","endLine":1,"endColumn":37},{"ruleId":"177","severity":1,"message":"191","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":20},{"ruleId":"177","severity":1,"message":"182","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":24},{"ruleId":"177","severity":1,"message":"192","line":11,"column":19,"nodeType":"179","messageId":"180","endLine":11,"endColumn":37},{"ruleId":"177","severity":1,"message":"186","line":11,"column":39,"nodeType":"179","messageId":"180","endLine":11,"endColumn":46},{"ruleId":"177","severity":1,"message":"193","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":4,"column":1,"nodeType":"196","endLine":45,"endColumn":3},{"ruleId":"177","severity":1,"message":"197","line":5,"column":40,"nodeType":"179","messageId":"180","endLine":5,"endColumn":49},{"ruleId":"177","severity":1,"message":"198","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":15},{"ruleId":"177","severity":1,"message":"199","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":13},{"ruleId":"177","severity":1,"message":"200","line":12,"column":9,"nodeType":"179","messageId":"180","endLine":12,"endColumn":18},{"ruleId":"177","severity":1,"message":"201","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":14},{"ruleId":"177","severity":1,"message":"202","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":25},{"ruleId":"187","severity":1,"message":"203","line":22,"column":6,"nodeType":"189","endLine":22,"endColumn":8,"suggestions":"204"},{"ruleId":"177","severity":1,"message":"193","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":3,"column":1,"nodeType":"196","endLine":22,"endColumn":3},{"ruleId":"177","severity":1,"message":"205","line":10,"column":13,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},{"ruleId":"177","severity":1,"message":"206","line":3,"column":5,"nodeType":"179","messageId":"180","endLine":3,"endColumn":11},{"ruleId":"177","severity":1,"message":"207","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":22},{"ruleId":"177","severity":1,"message":"208","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":14},{"ruleId":"177","severity":1,"message":"181","line":1,"column":28,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"209","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":17},{"ruleId":"177","severity":1,"message":"210","line":1,"column":29,"nodeType":"179","messageId":"180","endLine":1,"endColumn":38},{"ruleId":"177","severity":1,"message":"211","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":12},{"ruleId":"177","severity":1,"message":"212","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":17},{"ruleId":"177","severity":1,"message":"193","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":5,"column":1,"nodeType":"196","endLine":19,"endColumn":3},{"ruleId":"177","severity":1,"message":"213","line":6,"column":11,"nodeType":"179","messageId":"180","endLine":6,"endColumn":25},{"ruleId":"177","severity":1,"message":"210","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"214","line":1,"column":28,"nodeType":"179","messageId":"180","endLine":1,"endColumn":38},{"ruleId":"177","severity":1,"message":"212","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":17},{"ruleId":"177","severity":1,"message":"193","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"181","line":1,"column":29,"nodeType":"179","messageId":"180","endLine":1,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":5,"column":1,"nodeType":"196","endLine":21,"endColumn":3},{"ruleId":"177","severity":1,"message":"193","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":4,"column":1,"nodeType":"196","endLine":23,"endColumn":3},{"ruleId":"177","severity":1,"message":"215","line":6,"column":7,"nodeType":"179","messageId":"180","endLine":6,"endColumn":22},{"ruleId":"177","severity":1,"message":"216","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":15},{"ruleId":"177","severity":1,"message":"217","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":22},{"ruleId":"177","severity":1,"message":"193","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":5,"column":1,"nodeType":"196","endLine":23,"endColumn":3},{"ruleId":"177","severity":1,"message":"213","line":6,"column":11,"nodeType":"179","messageId":"180","endLine":6,"endColumn":25},{"ruleId":"177","severity":1,"message":"205","line":10,"column":13,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CircularProgress' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'AuthProvider' is defined but never used.","'spinner' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authState' and 'isSignedInResolver'. Either include them or remove the dependency array.","ArrayExpression",["220"],"'makeStyles' is defined but never used.","'isSignedInResolver' is assigned a value but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'authState' is assigned a value but never used.","'error' is assigned a value but never used.","'Paper' is defined but never used.","'useStyles' is assigned a value but never used.","'moment' is defined but never used.","'AccountCircleIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserNotes'. Either include it or remove the dependency array.",["221"],"'res' is assigned a value but never used.","'heroku' is assigned a value but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'CloseIcon' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'indexPageState' is assigned a value but never used.","'useContext' is defined but never used.","'array_to_delete' is assigned a value but never used.","'Modal' is defined but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [authState, isSignedInResolver]",{"range":"226","text":"227"},"Update the dependencies array to be: [getUserNotes]",{"range":"228","text":"229"},[830,832],"[authState, isSignedInResolver]",[818,820],"[getUserNotes]"]